swagger: "2.0"
info:
  title: Bank Argent API documentation
  description: Contains all available API endpoints in this codebase
  version: "1.0.0"
  termsOfService: "http://swagger.io/terms/"
host: localhost:3001
basePath: /api/v1
schemes:
  - http
paths:
  /user/login:
    post:
      tags:
        - User Module
      summary: Login
      description: API for Login
      parameters:
        - in: body
          name: body
          description: Login Payload
          required: true
          schema:
            $ref: "#/definitions/Login"
      produces:
        - application/json
      responses:
        "200":
          description: Login Successfully
          schema:
            $ref: "#/definitions/LoginResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
  /user/signup:
    post:
      tags:
        - User Module
      summary: Signup
      description: API for Signup
      parameters:
        - in: body
          name: body
          description: Signup Payload
          required: true
          schema:
            $ref: "#/definitions/User"
      produces:
        - application/json
      responses:
        "200":
          description: Signup Successfully
          schema:
            $ref: "#/definitions/ApiResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
  /user/profile:
    post:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for fetching a user profile
      parameters:
        - in: header
          type: string
          name: Authorization
          description: Attach Bearer JWT token
          required: true
      produces:
        - application/json
      responses:
        "200":
          description: User profile retrieved successully
          schema:
            $ref: "#/definitions/ApiResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
    put:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for updating a user profile
      parameters:
        - in: header
          type: string
          name: Authorization
          description: Attach Bearer JWT token
          required: true
        - in: body
          name: body
          description: Update user profile attributes
          required: true
          schema:
            $ref: "#/definitions/UserProfile"
      produces:
        - application/json
      responses:
        "200":
          description: User profile retrieved successully
          schema:
            $ref: "#/definitions/ApiResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
/user/accounts:
    get:
      security:
        - Bearer: []
      tags:
        - Accounts Module
      produces:
        - application/json
      summary: Get user accounts
      description: search user accounts list
      parameters:
        - in: header
          type: string
          name: Authorization
          description: Attach Bearer JWT token
          required: true
      responses:
        '200':
          description: Accounts retrieved successully
          schema:
            type: object
            properties:
              status:
                type: integer
              body:
                type: object
                properties:
                  accounts:
                    type: array
                    items:
                      $ref: '#/definitions/UserAccount'
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
  /user/account/{accountId}/transactions:
    get:
      security:
        - Bearer: []
      tags:
        - Accounts Module
      produces:
        - application/json
      summary: Get account transactions
      description: Retrieve acounts list
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
          type: string
        - in: path
          name: accountId
          type: integer
          required: true
          description: Numeric ID of the account to get
        - in: query
          name: limit
          type: integer
          description: The numbers of items to return
        - in: query
          name: offset
          type: integer
          required: false
          description: The number of items to skip before starting to collect the result set
        - in: query
          name: month
          type: string
          format: MM:YYYY
          description: The month of transactions to get
      responses:
        '200':
          description: Transactions retrieved successully
          schema:
            type: object
            properties:
              status:
                type: integer
              body:
                type: object
                properties:
                  transactions:
                    type: array
                    items:
                      $ref: '#/definitions/Transaction'
        '401':
          description: Unauthorized
        '403':
          description: Access is denied
        '404':
          description: Page not found
        '500':
          description: Internal Server Error
  /user/account/{accountId}/transaction/{transactionId}:
    get:
      security:
        - Bearer: []
      tags:
        - Accounts Module
      produces:
        - application/json
      summary: Get a specific transaction
      description: Retrieve a specific user transaction
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
          type: string
        - in: path
          name: accountId
          type: integer
          required: true
          description: Numeric ID of the account to get
        - in: path
          name: transactionId
          description: Numeric ID of the transaction to get
          type: integer
          required: true
      responses:
        '200':
          description: User accounts retrieved successully
          schema:
            type: object
            properties:
              status:
                type: integer
              body:
                type: object
                properties:
                  transaction:
                    $ref: '#/definitions/Transaction'
        '401':
          description: Unauthorized
        '403':
          description: Access is denied
        '404':
          description: Page not found
        '500':
          description: Internal Server Error
    delete:
      security:
        - Bearer: []
      tags:
        - Accounts Module
      produces:
        - application/json
      summary: Delete a specific transaction
      description: Delete a specific user transaction
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
          type: string
        - in: path
          name: accountId
          type: integer
          required: true
          description: Numeric ID of the account to get
        - in: path
          name: transactionId
          description: Numeric ID of the transaction to get
          type: integer
          required: true
      responses:
        '200':
          description: The transaction was successfully deleted
          schema:
            type: object
            properties:
              status:
                type: integer
              body:
                type: string

        '400':
          description: Invalid ID Supplied
        '401':
          description: Unauthorized
        '403':
          description: Access is denied
        '404':
          description: Page not found
        '500':
          description: Internal Server Error

  /user/account/{accountId}/transaction/{transactionId}/categories:
    put:
      security:
        - Bearer: []
      tags:
        - Accounts Module
      produces:
        - application/json
      summary: Update a specific transaction
      description: Update user transaction
      parameters:
        - name: Authorization
          in: header
          description: Attach Bearer JWT token
          required: true
          type: string
        - in: path
          name: accountId
          type: integer
          required: true
          description: Numeric ID of the account to get
        - in: path
          name: transactionId
          description: Numeric ID of the transaction to get
          type: integer
          required: true
        - in: body
          name: body
          description: Update user transaction
          required: true
          schema:
            $ref: '#/definitions/TransactionsCategory'
      responses:
        '200':
          description: The transaction has been updated successfully
          schema:
            type: object
            properties:
              status:
                type: integer
              body:
                type: object
                properties:
                  transaction:
                    $ref: '#/definitions/Transaction'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Access is denied
        '500':
          description: Internal Server Error

  /user/account/{accountId}/transaction/{transactionId}/notes:
    put:
      security:
        - Bearer: []
      tags:
        - Accounts Module
      produces:
        - application/json
      summary: Update a specific transaction
      description: Update user transaction
      parameters:
        - name: Authorization
          in: header
          description: Attach Bearer JWT token
          required: true
          type: string
        - in: path
          name: accountId
          type: integer
          required: true
          description: Numeric ID of the account to get
        - in: path
          name: transactionId
          description: Numeric ID of the transaction to get
          type: integer
          required: true
        - in: body
          name: body
          description: Update user transaction
          required: true
          schema:
            $ref: '#/definitions/TransactionsNotes'
      responses:
        '200':
          description: The transaction has been updated successfully
          schema:
            type: object
            properties:
              status:
                type: integer
              body:
                type: object
                properties:
                  transaction:
                    $ref: '#/definitions/Transaction'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Access is denied
        '500':
          description: Internal Server Error
securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
definitions:
  User:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
      firstName:
        type: string
        description: user first name
      lastName:
        type: string
        description: user last name
  Login:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
  ApiResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: object
        properties:
          id:
            type: string
          email:
            type: string
  LoginResponse:
    type: object
    properties:
      token:
        type: string
  UserProfile:
    type: object
    properties:
      firstName:
        type: string
      lastName:
        type: string
        UserAccount:
    type: object
    properties:
      id:
        type: integer
      name:
        type: string
      balance:
        type: number
  Transaction:
    type: object
    properties:
      id:
        type: integer
      name:
        type: string
      amount:
        type: number
      balance:
        type: number
      type:
        $ref: '#/definitions/TransactionsType'
      category:
        $ref: '#/definitions/TransactionsCategory'
      notes:
        $ref: '#/definitions/TransactionsNotes'
      createdAt:
        type: string
        format: date-time
  TransactionsType:
    type: object
    properties:
      id:
        type: integer
      name:
        type: string
  TransactionsCategory:
    type: object
    properties:
      id:
        type: integer
      name:
        type: string
  TransactionsNotes:
    type: object
    properties:
      id:
        type: integer
      name:
        type: string
